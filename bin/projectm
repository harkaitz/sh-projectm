#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 ...
#h:
#h: Project management tool
#h:
#h: ... show          : Show configuration.
#h: ... dirs          : List directories with projects.
#h: ... prjs          : List known projects.
#h: ... prjs-dir      : List projects with directories.
#h: ... prjs-new      : List projects with directories but not listed.
#h: ... script|s NAME : Search a script.
##:
projectm() {
    local cmd="$1"
    shift
    case "${cmd}" in
        show)     projectm_show_variables                    ;;
        dirs)     projectm_dirs                              ;;
        prjs)     projectm_prjs                              ;;
        prjs-dir) projectm_prjs_dir                          ;;
        prjs-new) projectm_prjs_new                          ;;
        script|s) projectm_search_script "$@"                ;;
        *)        error "Invalid argument: ${cmd}."; return 1;;
    esac
}
projectm_show_variables() {
    printf '%-20s : %s\n' \
           PROJECTM_FILE "${PROJECTM_FILE}" \
           PROJECTM_PATH "${PROJECTM_PATH}"
}
projectm_calc_variables() {
    PROJECTM_FILE="${PROJECTM_FILE:-${HOME}/projects.lst}"
    PROJECTM_PATH="`dirname "${PROJECTM_FILE}"`"
}
## -----------------------------------------------------------------------------
projectm_dirs() {
    if test -f "${PROJECTM_FILE}"; then
        sed -n "s|^D *|${PROJECTM_PATH}/|p" "${PROJECTM_FILE}"
    fi
}
projectm_prjs() {
    if test -f "${PROJECTM_FILE}"; then
        sed -n "s|^P *\([^ ]*\).*|${PROJECTM_PATH}/\1|p" "${PROJECTM_FILE}"
    fi
}
projectm_prjs_dir() {
    local IFS=':' d1='' d2=''
    for d1 in `projectm_dirs | tr '\n' ':'`; do
        for d2 in `find "${d1}" -mindepth 1 -maxdepth 1 -type d | sort | tr '\n' ':'`; do
            echo "${d2}"
        done
    done
}
projectm_prjs_new() {
    local sed="$(projectm_prjs | sed 's/\(.*\)/\\|\1|d/')"
    projectm_prjs_dir | sed "${sed}"
}
projectm_search_script() {
    local IFS=':'
    while test -n "${1}"; do
        for d1 in `projectm_prjs_dir | tr '\n' ':'`; do
            find ${d1} -executable -type f -iname "${1}"
        done
        shift
    done
}




## -----------------------------------------------------------------------------
error() { echo "${SCRNAME}: error: $*" >&2; }
projectm_calc_variables
SCRNAME="`basename "$0"`"
if test @"${SCRNAME}" = @"projectm";then
    case "${1}" in
        ''|-h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)
            projectm "$@"
            ;;
    esac
fi
hproject_traverse() {
    hgit traverse `hproject_list | sed -n 's|^.*: GIT : *||p'`
}
